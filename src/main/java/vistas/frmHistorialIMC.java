/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import libreriasExternas.ComponentMover;
import controladores.ControladorIMC;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Insets;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.SwingWorker;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import libreriasExternas.Correo;
import libreriasExternas.MensajesModales;
import libreriasExternas.PdfCreator;
import modelos.ModeloIMC;
import modelos.ModeloUsuario;

/**
 *
 * @author Alberto Mora
 */
public class frmHistorialIMC extends javax.swing.JFrame {

    ModeloUsuario sesion;
    MensajesModales cargaAsync = new MensajesModales();
    ArrayList<ModeloIMC> datos;
    DefaultTableModel tableModel;

    /**
     * Creates new form frmHistorialIMC
     */
    public frmHistorialIMC() {
        initComponents();
        setLocationRelativeTo(null);
        iniCompPropios();
    }

    public frmHistorialIMC(ModeloUsuario sesion) {
        initComponents();
        setLocationRelativeTo(null);
        this.sesion = sesion;
        iniCompPropios();

    }

    private void iniCompPropios() {
        lblUsuario.setText(sesion.getNombre() + " " + sesion.getApellidos());
        ComponentMover cm = new ComponentMover();
        cm.registerComponent(this);
        String encabezado[] = {"IMC", "Fecha", "Dieta", "Rutina", "Categoría", "id"};
        tableModel = new DefaultTableModel(null, encabezado);
        tblDatos.setModel(tableModel);
        tblDatos.getColumnModel().getColumn(5).setMaxWidth(0);
        tblDatos.getColumnModel().getColumn(5).setMinWidth(0);
        tblDatos.getColumnModel().getColumn(5).setWidth(0);
        tblDatos.getColumnModel().getColumn(5).setPreferredWidth(0);
        tblDatos.sizeColumnsToFit(-1);
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnMinimizar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        btnEnviar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnVer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(177, 255, 160));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(176, 153, 252)));

        jLabel9.setIcon(new ImageIcon(System.getProperty("user.dir") + "/resources/man-user.png"));

        lblUsuario.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        lblUsuario.setText("Nombre Apellido");

        btnLogout.setBackground(new java.awt.Color(177, 255, 160));
        btnLogout.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(102, 102, 102));
        btnLogout.setIcon(new ImageIcon(System.getProperty("user.dir") + "/resources/power-button-off.png"));
        btnLogout.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnLogout.setContentAreaFilled(false);
        btnLogout.setFocusPainted(false);
        btnLogout.setOpaque(true);
        btnLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLogoutMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnLogoutMouseReleased(evt);
            }
        });
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUsuario)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(176, 153, 252)));

        btnMinimizar.setBackground(new java.awt.Color(250, 250, 250));
        btnMinimizar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnMinimizar.setText("_");
        btnMinimizar.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(226, 224, 224)));
        btnMinimizar.setContentAreaFilled(false);
        btnMinimizar.setFocusPainted(false);
        btnMinimizar.setMargin(new Insets(0,0,0,0));
        btnMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnMinimizarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMinimizarMouseReleased(evt);
            }
        });
        btnMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizarActionPerformed(evt);
            }
        });

        btnCerrar.setBackground(new java.awt.Color(250, 250, 250));
        btnCerrar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnCerrar.setText("X");
        btnCerrar.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(226, 224, 224)));
        btnCerrar.setContentAreaFilled(false);
        btnCerrar.setFocusPainted(false);
        btnCerrar.setMargin(new Insets(0,0,0,0));
        btnCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCerrarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCerrarMouseReleased(evt);
            }
        });
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(226, 224, 224)), "Historial de IMC's", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Verdana", 1, 24))); // NOI18N

        tblDatos.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "1", "1", "1", null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "IMC", "Fecha", "Dieta", "Rutina", "Categoría", "Título 6"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatos.setFocusable(false);
        tblDatos.setGridColor(new java.awt.Color(226, 224, 224));
        tblDatos.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDatos.setRowHeight(40);
        tblDatos.setSelectionBackground(new java.awt.Color(177, 251, 195));
        tblDatos.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tblDatos);

        btnEnviar.setBackground(new java.awt.Color(153, 252, 240));
        btnEnviar.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnEnviar.setForeground(new java.awt.Color(102, 102, 102));
        btnEnviar.setText("Enviar PDF");
        btnEnviar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(226, 224, 224)));
        btnEnviar.setContentAreaFilled(false);
        btnEnviar.setFocusPainted(false);
        btnEnviar.setOpaque(true);
        btnEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEnviarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEnviarMouseReleased(evt);
            }
        });
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(255, 255, 255));
        btnVolver.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(102, 102, 102));
        btnVolver.setText("Volver");
        btnVolver.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(226, 224, 224)));
        btnVolver.setContentAreaFilled(false);
        btnVolver.setFocusPainted(false);
        btnVolver.setOpaque(true);
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnVolverMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnVolverMouseReleased(evt);
            }
        });
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(252, 153, 178));
        btnEliminar.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(102, 102, 102));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(226, 224, 224)));
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setFocusPainted(false);
        btnEliminar.setOpaque(true);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEliminarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEliminarMouseReleased(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnVer.setBackground(new java.awt.Color(153, 252, 240));
        btnVer.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnVer.setForeground(new java.awt.Color(102, 102, 102));
        btnVer.setText("Ver PDF");
        btnVer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(226, 224, 224)));
        btnVer.setContentAreaFilled(false);
        btnVer.setFocusPainted(false);
        btnVer.setOpaque(true);
        btnVer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnVerMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnVerMouseReleased(evt);
            }
        });
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(748, Short.MAX_VALUE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(488, Short.MAX_VALUE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 870, Short.MAX_VALUE)
                .addComponent(btnMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutMousePressed
        // TODO add your handling code here:
        btnLogout.setBorder(new LineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_btnLogoutMousePressed

    private void btnLogoutMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutMouseReleased
        // TODO add your handling code here:
        btnLogout.setBorder(new LineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_btnLogoutMouseReleased

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        MensajesModales mensaje = new MensajesModales(this, "¿Desea cerrar sesión?", "Continuar", 2);
        mensaje.ShowMessage();
        if (mensaje.getResult() == 1) {
            this.sesion = null;
            frmLogin logout = new frmLogin();
            logout.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnMinimizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizarMousePressed
        // TODO add your handling code here:
        btnMinimizar.setBorder(new LineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_btnMinimizarMousePressed

    private void btnMinimizarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizarMouseReleased
        // TODO add your handling code here:
        btnMinimizar.setBorder(new LineBorder(new Color(226, 224, 224)));
    }//GEN-LAST:event_btnMinimizarMouseReleased

    private void btnMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizarActionPerformed
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_btnMinimizarActionPerformed

    private void btnCerrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMousePressed
        // TODO add your handling code here:
        btnCerrar.setBorder(new LineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_btnCerrarMousePressed

    private void btnCerrarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseReleased
        // TODO add your handling code here:
        btnCerrar.setBorder(new LineBorder(new Color(226, 224, 224)));
    }//GEN-LAST:event_btnCerrarMouseReleased

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        MensajesModales mensaje = new MensajesModales(this, "¿Está seguro que desea salir del sistema?", "Continuar", 2);
        mensaje.ShowMessage();
        if (mensaje.getResult() == 1) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnEnviarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMousePressed
        // TODO add your handling code here:
        btnEnviar.setBorder(new LineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_btnEnviarMousePressed

    private void btnEnviarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMouseReleased
        // TODO add your handling code here:
        btnEnviar.setBorder(new LineBorder(new Color(226, 224, 224)));
    }//GEN-LAST:event_btnEnviarMouseReleased

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        // TODO add your handling code here:
        gestionPdf(2);
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnVolverMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMousePressed
        // TODO add your handling code here:
        btnVolver.setBorder(new LineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_btnVolverMousePressed

    private void btnVolverMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseReleased
        // TODO add your handling code here:
        btnVolver.setBorder(new LineBorder(new Color(226, 224, 224)));
    }//GEN-LAST:event_btnVolverMouseReleased

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        frmGestionIMC back = new frmGestionIMC(sesion);
        back.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnEliminarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMousePressed
        // TODO add your handling code here:
        btnEliminar.setBorder(new LineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_btnEliminarMousePressed

    private void btnEliminarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseReleased
        // TODO add your handling code here:
        btnEliminar.setBorder(new LineBorder(new Color(226, 224, 224)));
    }//GEN-LAST:event_btnEliminarMouseReleased

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        MensajesModales mensaje;
        if (tblDatos.getSelectedRows().length != 0) {
            if (!(tblDatos.getSelectedRows().length > 1)) {
                mensaje = new MensajesModales(this, "Está acción es permanente e irreversible, ¿Desea continuar?", "Continuar", 2);
                mensaje.ShowMessage();
                if (mensaje.getResult() == 1) {
                    int idRow = tblDatos.getSelectedRow();
                    String idText = (String) tblDatos.getModel().getValueAt(idRow, 5);
                    System.out.println(idText);
                    int id = Integer.parseInt(idText);
                    AsyncDelete borrar;
                    (borrar = new AsyncDelete(id)).execute();
                    cargaAsync.loading();
                    try {
                        boolean result = borrar.get();
                        if (result) {
                            mensaje = new MensajesModales(this, "El registro ha sido eliminado correctamente", "Ok", 1);
                            mensaje.ShowMessage();
                            tableModel.removeRow(idRow);
                        } else {
                            mensaje = new MensajesModales(this, "Ha ocurrido un error inesperado, por favor inténtelo más tarde o contacte al administrador para más información", "Ok", 1);
                            mensaje.ShowMessage();
                        }
                    } catch (Exception e) {
                        mensaje = new MensajesModales(this, "Ha ocurrido un error inesperado, por favor inténtelo más tarde", "Ok", 1);
                        mensaje.ShowMessage();
                        System.out.println(e);
                    }
                }
            } else {
                mensaje = new MensajesModales(this, "Por favor seleccione sólo un registro a la vez", "Ok", 1);
                mensaje.ShowMessage();
            }
        } else {
            mensaje = new MensajesModales(this, "Para realizar esta acción debe seleccionar un registro", "Ok", 1);
            mensaje.ShowMessage();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnVerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerMousePressed
        // TODO add your handling code here:
        btnVer.setBorder(new LineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_btnVerMousePressed

    private void btnVerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerMouseReleased
        // TODO add your handling code here:
        btnVer.setBorder(new LineBorder(new Color(226, 224, 224)));
    }//GEN-LAST:event_btnVerMouseReleased

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
        // TODO add your handling code here:
        gestionPdf(1);
    }//GEN-LAST:event_btnVerActionPerformed
    private void gestionPdf(int opcion){
        MensajesModales mensaje;
        if (tblDatos.getSelectedRows().length != 0) {
            if (!(tblDatos.getSelectedRows().length > 1)) {
                try {
                    AsyncPdfGen send;
                    double imc = Double.parseDouble((String) tblDatos.getValueAt(tblDatos.getSelectedRow(), 0));
                    (send = new AsyncPdfGen(imc,opcion)).execute();
                    cargaAsync.loading();
                    boolean result = send.get();
                    if (!result) {
                        mensaje = new MensajesModales(this, "En este momento no tenemos información recomendada para este IMC", "Ok", 1);
                        mensaje.ShowMessage();
                    }else{
                        if(opcion != 1){
                            mensaje = new MensajesModales(this, "El correo ha sido enviado con éxito a la dirección: " + sesion.getEmail(), "Ok", 1);
                            mensaje.ShowMessage();
                        }
                    }
                } catch (Exception e) {
                    mensaje = new MensajesModales(this, "En este momento no tenemos información recomendada para este IMC", "Ok", 1);
                    mensaje.ShowMessage();
                }
            } else {
                mensaje = new MensajesModales(this, "Por favor seleccione sólo un registro a la vez", "Ok", 1);
                mensaje.ShowMessage();
            }
        } else {
            mensaje = new MensajesModales(this, "Para realizar esta acción debe seleccionar un registro", "Ok", 1);
            mensaje.ShowMessage();
        }
    }
    private void cargarTabla() {
        AsyncTask db;
        MensajesModales mensaje;
        (db = new AsyncTask()).execute();
        cargaAsync.loading();
        try {
            datos = db.get();
        } catch (Exception e) {
            mensaje = new MensajesModales(this, "No existen IMC, Dietas o Rutinas registradas para este usuario, por favor inténtelo de nuevo", "Ok", 1);
            mensaje.ShowMessage();
        }
        if (datos.size() > 0) {
            for (ModeloIMC c : datos) {
                String fila[] = {Double.toString(c.getIMC()), c.getFecha(), c.getNombreDietaRec(), c.getNombreRutinaRec(), c.getCategoria(), Integer.toString(c.getId())};
                tableModel.addRow(fila);
            }
        } else {
            mensaje = new MensajesModales(this, "No existen IMC, Dietas o Rutinas registradas para este usuario, por favor inténtelo más tarde", "Ok", 1);
            mensaje.ShowMessage();
        }
    }

    private class AsyncTask extends SwingWorker<ArrayList<ModeloIMC>, String> {

        @Override
        protected ArrayList<ModeloIMC> doInBackground() throws Exception {
            ControladorIMC con = new ControladorIMC();
            return con.obtenerHistorialIMC(sesion.getId());
        }

        @Override
        protected void done() {
            cargaAsync.dispose();
        }
    }

    private class AsyncDelete extends SwingWorker<Boolean, String> {

        int id;

        public AsyncDelete(int id) {
            this.id = id;
        }

        @Override
        protected Boolean doInBackground() throws Exception {
            ControladorIMC con = new ControladorIMC();
            return con.eliminarIMC(id);
        }

        @Override
        protected void done() {
            cargaAsync.dispose();
        }
    }

    private class AsyncPdfGen extends SwingWorker<Boolean, String> {

        double imc;
        int opcion;

        public AsyncPdfGen(double imc, int opcion) {
            this.imc = imc;
            this.opcion = opcion;
        }

        protected Boolean doInBackground() throws Exception {
            PdfCreator pdf = new PdfCreator();
            try {
                pdf.writePDF(imc);
                if (opcion == 1) {
                    pdf.openFile();
                } else {
                   String asunto = "Healthy tips - Archivo PDF";
                   String mensaje = "Estimado(a) " + sesion.getNombre() + " " + sesion.getApellidos() + ":" 
                           + "\n\nEl equipo de HealthyBook le envía un cordial saludo. Adjunto podrá encontrar el archivo PDF generado para su solicitud. Este contiene"
                           + " tips importantes que le pueden ayudar a equilibrar su índice de masa corporal. \n\nSaludos cordiales, \nEquipo de HealthyBook";
                   Correo correo = new Correo(mensaje, sesion.getEmail(), asunto);
                   correo.enviarCorreo();
                }
                return true;
            } catch (Exception e) {
                System.out.println(e);
                return false;
            }
        }

        @Override
        protected void done() {
            cargaAsync.dispose();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //Set custom LaF
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmHistorialIMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmHistorialIMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmHistorialIMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmHistorialIMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmHistorialIMC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMinimizar;
    private javax.swing.JButton btnVer;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables
}
